#!/usr/bin/expect -f
set timeout 60
spawn ssh -o StrictHostKeyChecking=no pi@192.168.1.106
expect "password:"
send "palmer00\r"
expect "$ "

# Create and run performance test
send "cat > /tmp/check-video.sh << 'SCRIPT_EOF'\n"
send "#!/bin/bash\n"
send "echo '=== VIDEO PERFORMANCE TEST ==='\n"
send "date\n"
send "echo ''\n"
send "echo 'CPU Usage:'\n"
send "top -bn1 | head -5\n"
send "echo ''\n"
send "echo 'Video Processes:'\n"
send "ps aux | grep -E '(chromium|vlc)' | grep -v grep | head -3\n"
send "echo ''\n"
send "echo 'GPU Status:'\n"
send "vcgencmd measure_temp\n"
send "vcgencmd get_mem gpu\n"
send "vcgencmd codec_enabled H264\n"
send "echo ''\n"
send "echo 'Memory:'\n"
send "free -h | head -2\n"
send "echo ''\n"
send "echo 'Service:'\n"
send "systemctl is-active video-player.service\n"
send "journalctl -u video-player.service -n 20 --no-pager | grep -E '(fps|FPS|frame|decode|render|performance)' || echo 'No performance logs found'\n"
send "SCRIPT_EOF\n"
expect "$ "

send "chmod +x /tmp/check-video.sh && /tmp/check-video.sh\r"
expect "$ "

# Check VNC status
send "echo ''\r"
expect "$ "
send "echo '=== VNC STATUS ==='\r"
expect "$ "
send "systemctl is-active vncserver-x11-serviced\r"
expect "$ "
send "ss -tulpn | grep 5900 || echo 'VNC port not listening'\r"
expect "$ "

# Test video playback with performance metrics
send "echo ''\r"
expect "$ "
send "echo '=== TESTING VIDEO PLAYBACK PERFORMANCE ==='\r"
expect "$ "
send "timeout 10 ffmpeg -i /opt/videos/test.mp4 -benchmark -f null - 2>&1 | grep -E 'fps|speed' || echo 'ffmpeg not installed'\r"
expect "$ "

# Install minimal tools if needed
send "which ffmpeg > /dev/null || sudo apt install -y --no-install-recommends ffmpeg\r"
expect "$ "

# Get video info
send "ffprobe -hide_banner /opt/videos/test.mp4 2>&1 | grep -E 'Stream|Duration' | head -5 || echo 'Cannot analyze video'\r"
expect "$ "

send "echo ''\r"
expect "$ "
send "echo 'VNC Access: 192.168.1.106:5900'\r"
expect "$ "
send "echo 'Try connecting with a VNC client to see the video playing'\r"
expect "$ "
send "exit\r"
expect eof