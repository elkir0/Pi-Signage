#!/bin/bash

# SCRIPT DE CONFIGURATION AUTOMATIQUE
# D√©tecte la plateforme et applique la meilleure solution automatiquement
# Bas√© sur recherche exhaustive des meilleures pratiques

echo "ü§ñ AUTO-OPTIMISATION VID√âO INTELLIGENTE"
echo "========================================"
echo "Bas√© sur recherche exhaustive - Solutions √©prouv√©es"
echo "Date: $(date)"
echo

VIDEO_FILE="${1:-/opt/pisignage/media/sintel.mp4}"
FORCE_SOLUTION="${2:-auto}"

if [ ! -f "$VIDEO_FILE" ]; then
    echo "‚ùå Erreur: Fichier vid√©o non trouv√©: $VIDEO_FILE"
    echo "üí° Usage: $0 [video_file] [force_solution]"
    echo "   force_solution: auto|1|2|3|raspberry|test"
    exit 1
fi

echo "üìÅ Fichier vid√©o: $VIDEO_FILE"
echo "üéØ Mode: $FORCE_SOLUTION"
echo

# ============================================================================
# 1. DIAGNOSTIC AUTOMATIQUE
# ============================================================================

echo "üîç DIAGNOSTIC AUTOMATIQUE:"

# D√©tecter l'architecture
ARCH=$(uname -m)
IS_RASPBERRY_PI=false
IS_ARM=false
IS_X86=false

case "$ARCH" in
    armv7l|aarch64)
        IS_ARM=true
        if [ -f /proc/device-tree/model ] && grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
            IS_RASPBERRY_PI=true
            PI_MODEL=$(cat /proc/device-tree/model 2>/dev/null)
            echo "   ü•ß Raspberry Pi d√©tect√©: $PI_MODEL"
        else
            echo "   üîß Board ARM g√©n√©rique"
        fi
        ;;
    x86_64)
        IS_X86=true
        echo "   üíª PC x86_64 d√©tect√©"
        ;;
    *)
        echo "   ‚ùì Architecture inconnue: $ARCH"
        ;;
esac

# D√©tecter les capacit√©s
FFMPEG_AVAILABLE=$(command -v ffmpeg > /dev/null && echo "true" || echo "false")
VLC_AVAILABLE=$(command -v vlc > /dev/null && echo "true" || echo "false")
MPV_AVAILABLE=$(command -v mpv > /dev/null && echo "true" || echo "false")
OMXPLAYER_AVAILABLE=$(command -v omxplayer > /dev/null && echo "true" || echo "false")

echo "   üì¶ FFmpeg: $FFMPEG_AVAILABLE"
echo "   üì¶ VLC: $VLC_AVAILABLE"
echo "   üì¶ MPV: $MPV_AVAILABLE"
echo "   üì¶ OMXPlayer: $OMXPLAYER_AVAILABLE"

# D√©tecter acc√©l√©ration mat√©rielle
HW_ACCELERATION=""
if [ -e /dev/dri/renderD128 ]; then
    HW_ACCELERATION="VAAPI"
elif [ -e /dev/video11 ]; then
    HW_ACCELERATION="V4L2_M2M"
elif command -v nvidia-smi > /dev/null 2>&1; then
    HW_ACCELERATION="NVIDIA"
elif [ "$IS_RASPBERRY_PI" = true ]; then
    HW_ACCELERATION="VIDEOCORE"
else
    HW_ACCELERATION="SOFTWARE"
fi
echo "   üöÄ Acc√©l√©ration: $HW_ACCELERATION"

echo

# ============================================================================
# 2. S√âLECTION AUTOMATIQUE DE LA MEILLEURE SOLUTION
# ============================================================================

RECOMMENDED_SOLUTION=""
SOLUTION_REASON=""

if [ "$FORCE_SOLUTION" != "auto" ]; then
    case "$FORCE_SOLUTION" in
        "1"|"ffmpeg")
            RECOMMENDED_SOLUTION="1"
            SOLUTION_REASON="Forc√© par utilisateur"
            ;;
        "2"|"mpv")
            RECOMMENDED_SOLUTION="2"
            SOLUTION_REASON="Forc√© par utilisateur"
            ;;
        "3"|"vlc")
            RECOMMENDED_SOLUTION="3"
            SOLUTION_REASON="Forc√© par utilisateur"
            ;;
        "raspberry")
            RECOMMENDED_SOLUTION="raspberry"
            SOLUTION_REASON="Mode Raspberry Pi sp√©cialis√©"
            ;;
        "test")
            RECOMMENDED_SOLUTION="test"
            SOLUTION_REASON="Mode test/benchmark"
            ;;
        *)
            echo "‚ùå Solution forc√©e invalide: $FORCE_SOLUTION"
            exit 1
            ;;
    esac
else
    # Logique de s√©lection automatique bas√©e sur recherche
    if [ "$IS_RASPBERRY_PI" = true ]; then
        if [ "$OMXPLAYER_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="raspberry"
            SOLUTION_REASON="Raspberry Pi + OMXPlayer = Performance optimale (0-3% CPU)"
        elif [ "$VLC_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="3"
            SOLUTION_REASON="Raspberry Pi + VLC = Compatibilit√© universelle"
        elif [ "$FFMPEG_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="1"
            SOLUTION_REASON="Raspberry Pi + FFmpeg = Fallback performant"
        else
            echo "‚ùå Aucun player vid√©o install√© sur Raspberry Pi"
            exit 1
        fi
    elif [ "$IS_X86" = true ]; then
        if [ "$HW_ACCELERATION" = "VAAPI" ] && [ "$MPV_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="2"
            SOLUTION_REASON="x86_64 + VAAPI + MPV = Meilleure qualit√© moderne"
        elif [ "$FFMPEG_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="1"
            SOLUTION_REASON="x86_64 + FFmpeg = Performance √©prouv√©e"
        elif [ "$VLC_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="3"
            SOLUTION_REASON="x86_64 + VLC = Compatibilit√© universelle"
        else
            echo "‚ùå Aucun player vid√©o install√©"
            exit 1
        fi
    else
        # ARM g√©n√©rique ou autre
        if [ "$FFMPEG_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="1"
            SOLUTION_REASON="Architecture g√©n√©rique + FFmpeg = Plus compatible"
        elif [ "$VLC_AVAILABLE" = true ]; then
            RECOMMENDED_SOLUTION="3"
            SOLUTION_REASON="Architecture g√©n√©rique + VLC = Fallback universel"
        else
            echo "‚ùå Aucun player vid√©o appropri√© install√©"
            exit 1
        fi
    fi
fi

echo "üéØ SOLUTION RECOMMAND√âE: $RECOMMENDED_SOLUTION"
echo "üìã Raison: $SOLUTION_REASON"
echo

# ============================================================================
# 3. EX√âCUTION DE LA SOLUTION OPTIMALE
# ============================================================================

case "$RECOMMENDED_SOLUTION" in
    "1")
        echo "üöÄ LANCEMENT SOLUTION 1: FFmpeg Optimis√©"
        /opt/pisignage/scripts/solution-1-ffmpeg-optimized.sh "$VIDEO_FILE"
        ;;
    "2")
        echo "üöÄ LANCEMENT SOLUTION 2: MPV Modern"
        /opt/pisignage/scripts/solution-2-mpv-modern.sh "$VIDEO_FILE"
        ;;
    "3")
        echo "üöÄ LANCEMENT SOLUTION 3: VLC Universal"
        /opt/pisignage/scripts/solution-3-vlc-universal.sh "$VIDEO_FILE"
        ;;
    "raspberry")
        echo "üöÄ LANCEMENT SOLUTION RASPBERRY PI SP√âCIALIS√âE"
        echo
        echo "ü•ß OPTIMISATIONS RASPBERRY PI:"
        
        # V√©rifier la configuration GPU
        if command -v vcgencmd > /dev/null; then
            GPU_MEM=$(vcgencmd get_mem gpu 2>/dev/null | cut -d'=' -f2)
            echo "   GPU M√©moire: $GPU_MEM"
            if [ "${GPU_MEM%M}" -lt 128 ]; then
                echo "   ‚ö†Ô∏è  GPU m√©moire faible, recommand√©: gpu_mem=256"
            fi
        fi
        
        # Lancer OMXPlayer optimis√©
        echo "   üé¨ Lancement OMXPlayer optimis√©..."
        pkill -9 omxplayer vlc ffmpeg mpv 2>/dev/null
        
        omxplayer \
            --hw \
            --loop \
            --no-osd \
            --aspect-mode stretch \
            --orientation 0 \
            "$VIDEO_FILE" > /opt/pisignage/logs/omxplayer.log 2>&1 &
            
        PLAYER_PID=$!
        echo "   ‚úÖ OMXPlayer d√©marr√© (PID: $PLAYER_PID)"
        echo "   üìä CPU attendu: 0-3%"
        ;;
    "test")
        echo "üß™ MODE TEST/BENCHMARK"
        /opt/pisignage/scripts/benchmark-all-solutions.sh "$VIDEO_FILE"
        ;;
    *)
        echo "‚ùå Solution inconnue: $RECOMMENDED_SOLUTION"
        exit 1
        ;;
esac

echo
echo "‚úÖ AUTO-OPTIMISATION TERMIN√âE"
echo
echo "üìä MONITORING RECOMMAND√â:"
echo "   htop                    # CPU/RAM temps r√©el"
echo "   iotop                   # I/O disque"
echo "   vcgencmd measure_temp   # Temp√©rature (Pi uniquement)"
echo
echo "‚èπÔ∏è  ARR√äT:"
echo "   pkill -9 ffmpeg vlc mpv omxplayer"
echo
echo "üîÑ RED√âMARRAGE:"
echo "   $0 \"$VIDEO_FILE\" $FORCE_SOLUTION"