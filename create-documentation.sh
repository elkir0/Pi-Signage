#!/bin/bash

cd /opt/pisignage/github-v0.9.0

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# Documentation compl√®te dans docs/
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

# 1. Guide d'installation d√©taill√©
cat > docs/INSTALLATION.md << 'EOF'
# üì¶ Guide d'Installation D√©taill√© - Pi-Signage v0.9.0

## Pr√©requis Mat√©riels

- **Raspberry Pi 4 Model B** (2GB RAM minimum, 4GB recommand√©)
- Carte SD 16GB minimum (32GB recommand√©) Class 10 ou sup√©rieure
- Alimentation officielle 5V/3A
- C√¢ble HDMI
- √âcran compatible HDMI
- Connexion internet (Ethernet ou WiFi)

## Pr√©requis Logiciels

- **Raspberry Pi OS Bookworm Lite 64-bit** (OBLIGATOIRE)
  - T√©l√©charger : https://www.raspberrypi.com/software/operating-systems/
  - Version test√©e : 2025-09-20

## Installation √âtape par √âtape

### 1. Pr√©paration de la carte SD

```bash
# Sur votre ordinateur, flasher l'image avec Raspberry Pi Imager
# Configurer SSH et WiFi si n√©cessaire
```

### 2. Premier d√©marrage

```bash
# Connexion SSH (mot de passe par d√©faut: raspberry)
ssh pi@IP_RASPBERRY

# Changer le mot de passe
passwd

# Mise √† jour syst√®me
sudo apt update && sudo apt upgrade -y
```

### 3. Installation Pi-Signage

#### M√©thode 1 : Installation automatique (recommand√©e)
```bash
wget -O - https://raw.githubusercontent.com/elkir0/Pi-Signage/main/install.sh | sudo bash
```

#### M√©thode 2 : Installation manuelle
```bash
git clone https://github.com/elkir0/Pi-Signage.git
cd Pi-Signage
chmod +x install.sh
sudo ./install.sh
```

### 4. Configuration post-installation

Le syst√®me est configur√© automatiquement. Apr√®s red√©marrage :
- La vid√©o d√©marre automatiquement en plein √©cran
- L'interface web est accessible sur http://IP_RASPBERRY/

### 5. V√©rification

```bash
# V√©rifier le statut
/opt/pisignage/scripts/vlc-control.sh status

# V√©rifier l'interface web
curl http://localhost/api/system.php
```

## Configuration Avanc√©e

### Modification de la r√©solution

```bash
# √âditer /boot/firmware/config.txt
sudo nano /boot/firmware/config.txt

# Ajouter (exemple pour 1920x1080)
hdmi_group=2
hdmi_mode=82
```

### Ajout de vid√©os

1. Via l'interface web : Upload dans l'onglet M√©dias
2. Via SSH : Copier dans /opt/pisignage/media/
3. Via USB : Script de synchronisation disponible

## D√©pannage

Voir [TROUBLESHOOTING.md](TROUBLESHOOTING.md)
EOF

# 2. Architecture technique
cat > docs/ARCHITECTURE.md << 'EOF'
# üèóÔ∏è Architecture Technique - Pi-Signage v0.9.0

## Vue d'ensemble

Pi-Signage utilise une architecture modulaire optimis√©e pour les performances sur Raspberry Pi.

## Stack Technologique

### Syst√®me
- **OS** : Raspberry Pi OS Bookworm Lite 64-bit
- **Kernel** : 6.12+ avec support V4L2/DRM
- **GPU** : Configuration par d√©faut (76MB) SUFFISANTE

### Lecture Vid√©o
- **VLC 3.0.21** : Mode dummy, sans interface
- **D√©codage** : Software optimis√© (7% CPU pour 30 FPS)
- **Sortie** : X11 minimal avec xserver-xorg-core
- **Auto-start** : systemd + xinit

### Interface Web
- **Serveur** : Nginx 1.22
- **Backend** : PHP 8.2-FPM
- **API** : REST JSON
- **Frontend** : Vanilla JS (pas de framework)

## Architecture des Composants

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                 RASPBERRY PI 4               ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                             ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê           ‚îÇ
‚îÇ  ‚îÇ   Boot   ‚îÇ‚îÄ‚îÄ‚îÄ‚ñ∂‚îÇ  Auto-login ‚îÇ           ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò           ‚îÇ
‚îÇ        ‚îÇ               ‚îÇ                    ‚îÇ
‚îÇ        ‚ñº               ‚ñº                    ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê           ‚îÇ
‚îÇ  ‚îÇ  systemd ‚îÇ‚îÄ‚îÄ‚îÄ‚ñ∂‚îÇ   startx    ‚îÇ           ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò           ‚îÇ
‚îÇ                        ‚îÇ                    ‚îÇ
‚îÇ                        ‚ñº                    ‚îÇ
‚îÇ              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê          ‚îÇ
‚îÇ              ‚îÇ  VLC Fullscreen  ‚îÇ          ‚îÇ
‚îÇ              ‚îÇ   30+ FPS @ 7%   ‚îÇ          ‚îÇ
‚îÇ              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò          ‚îÇ
‚îÇ                                             ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê        ‚îÇ
‚îÇ  ‚îÇ        Interface Web           ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îÇ  Nginx   ‚îÇ‚îÄ‚îÄ‚îÇ  PHP-FPM    ‚îÇ ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ         ‚îÇ            ‚îÇ         ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ         ‚ñº            ‚ñº         ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îÇ      API REST JSON       ‚îÇ ‚îÇ        ‚îÇ
‚îÇ  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ        ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò        ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

## Flux de Donn√©es

1. **Boot** : 30 secondes jusqu'√† la vid√©o
2. **Auto-login** : getty@tty1 avec systemd
3. **X d√©marrage** : .bash_profile ‚Üí startx
4. **VLC** : .xinitrc ‚Üí start-video.sh
5. **Web** : Port 80 ‚Üí Nginx ‚Üí PHP ‚Üí API

## Performance

### M√©triques Cl√©s
- Boot to video : 30 secondes
- CPU usage : 7% (VLC) + 3% (X.org)
- RAM : ~300MB total
- FPS : 30+ confirm√© visuellement

### Optimisations Appliqu√©es
- Pas de window manager (√©conomie 100MB RAM)
- VLC en mode dummy (pas d'UI)
- Configuration GPU par d√©faut (pas d'overclocking)
- Services inutiles d√©sactiv√©s

## S√©curit√©

- Interface web en local seulement (pas d'exposition internet)
- Permissions minimales (www-data pour web)
- Pas de services SSH expos√©s par d√©faut
- Mises √† jour automatiques d√©sactiv√©es

## Fichiers de Configuration

```
/opt/pisignage/
‚îú‚îÄ‚îÄ scripts/vlc-control.sh     # Contr√¥le VLC
‚îú‚îÄ‚îÄ web/index.php              # Interface principale
‚îú‚îÄ‚îÄ web/api/*.php              # Endpoints API
‚îú‚îÄ‚îÄ config/playlists.json      # Stockage playlists
‚îú‚îÄ‚îÄ media/                     # Vid√©os
‚îî‚îÄ‚îÄ logs/                      # Logs syst√®me
```
EOF

# 3. Guide de d√©pannage
cat > docs/TROUBLESHOOTING.md << 'EOF'
# üõ†Ô∏è Guide de D√©pannage - Pi-Signage v0.9.0

## Probl√®mes Fr√©quents et Solutions

### 1. √âcran noir au d√©marrage

**Sympt√¥me** : L'√©cran reste noir apr√®s le boot

**Solutions** :
```bash
# V√©rifier si X est d√©marr√©
ps aux | grep Xorg

# Si non, d√©marrer manuellement
startx

# V√©rifier les logs
cat /var/log/Xorg.0.log | grep EE
```

### 2. Vid√©o ne d√©marre pas

**Sympt√¥me** : X d√©marre mais pas de vid√©o

**Solutions** :
```bash
# V√©rifier VLC
/opt/pisignage/scripts/vlc-control.sh status

# Relancer VLC
/opt/pisignage/scripts/vlc-control.sh restart

# V√©rifier les vid√©os
ls -la /opt/pisignage/media/
```

### 3. Performance d√©grad√©e (<30 FPS)

**Sympt√¥me** : Vid√©o saccad√©e

**Solutions** :
```bash
# V√©rifier throttling thermique
vcgencmd get_throttled
# Si != 0x0, probl√®me de temp√©rature ou alimentation

# V√©rifier temp√©rature
vcgencmd measure_temp
# Si > 70¬∞C, ajouter ventilation

# V√©rifier alimentation
dmesg | grep voltage
# Chercher "Under-voltage"
```

### 4. Interface web inaccessible

**Sympt√¥me** : Erreur 404 ou connexion refus√©e

**Solutions** :
```bash
# V√©rifier nginx
sudo systemctl status nginx
sudo systemctl restart nginx

# V√©rifier PHP
sudo systemctl status php8.2-fpm
sudo systemctl restart php8.2-fpm

# V√©rifier permissions
sudo chown -R www-data:www-data /opt/pisignage/web
```

### 5. Upload de vid√©os √©choue

**Sympt√¥me** : Erreur lors de l'upload via l'interface

**Solutions** :
```bash
# V√©rifier l'espace disque
df -h

# V√©rifier permissions
sudo chmod 775 /opt/pisignage/media
sudo chown www-data:www-data /opt/pisignage/media

# Augmenter limite PHP
sudo nano /etc/php/8.2/fpm/php.ini
# upload_max_filesize = 500M
# post_max_size = 500M
sudo systemctl restart php8.2-fpm
```

### 6. VLC crash r√©guli√®rement

**Sympt√¥me** : VLC se ferme inopin√©ment

**Solutions** :
```bash
# V√©rifier les logs
tail -f /opt/pisignage/logs/vlc.log

# Tester avec une vid√©o simple
ffmpeg -f lavfi -i testsrc2=size=1280x720:rate=30:duration=10 \
       -c:v h264 /tmp/test.mp4
/opt/pisignage/scripts/vlc-control.sh start /tmp/test.mp4

# R√©installer VLC
sudo apt-get install --reinstall vlc vlc-plugin-base
```

### 7. Boot automatique ne fonctionne pas

**Sympt√¥me** : Doit se connecter manuellement

**Solutions** :
```bash
# V√©rifier auto-login
cat /etc/systemd/system/getty@tty1.service.d/autologin.conf

# Reconfigurer
sudo mkdir -p /etc/systemd/system/getty@tty1.service.d/
sudo tee /etc/systemd/system/getty@tty1.service.d/autologin.conf << AUTO
[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin pi --noclear %I \$TERM
AUTO

# V√©rifier .bash_profile
cat /home/pi/.bash_profile
```

## Commandes Utiles

### Monitoring
```bash
# CPU et m√©moire
htop

# Temp√©rature
watch vcgencmd measure_temp

# Utilisation disque
df -h

# Logs syst√®me
journalctl -xe
```

### Reset Complet
```bash
# Arr√™ter tous les services
sudo systemctl stop nginx php8.2-fpm
pkill vlc

# Nettoyer
rm -rf /opt/pisignage/logs/*
rm /tmp/vlc.pid

# Red√©marrer
sudo reboot
```

## Support

Si le probl√®me persiste :
1. Collecter les logs : `sudo journalctl -b > debug.log`
2. Cr√©er une issue : https://github.com/elkir0/Pi-Signage/issues
3. Inclure : Version Pi, OS, logs, √©tapes reproduire
EOF

# 4. API Reference
cat > docs/API.md << 'EOF'
# üì° API Reference - Pi-Signage v0.9.0

## Base URL

```
http://IP_RASPBERRY/api/
```

## Endpoints

### 1. System Information

**GET** `/api/system.php`

Retourne les informations syst√®me en temps r√©el.

**Response:**
```json
{
    "cpu": 7.5,
    "memory": 13.2,
    "temperature": 52.3,
    "disk": 8.1,
    "vlc_status": "En lecture (PID: 1234, CPU: 7%, MEM: 3%)",
    "uptime": "1234.56"
}
```

### 2. VLC Control

**GET** `/api/control.php?action={action}`

Contr√¥le le lecteur VLC.

**Actions:**
- `status` : √âtat actuel
- `start` : D√©marrer la lecture
- `stop` : Arr√™ter la lecture
- `restart` : Red√©marrer

**Response:**
```json
{
    "status": "En lecture"
}
```

### 3. Playlist Management

**GET** `/api/playlist.php?action={action}`

Gestion des playlists.

**Actions:**
- `list` : Liste toutes les playlists
- `videos` : Liste les vid√©os disponibles
- `play&id={id}` : Jouer une playlist

**POST** `/api/playlist.php`
- `action=create` : Cr√©er une playlist
- `action=delete&id={id}` : Supprimer

**Response (videos):**
```json
{
    "videos": [
        {
            "name": "video.mp4",
            "size": 12345678,
            "duration": "120.5"
        }
    ]
}
```

### 4. Upload

**POST** `/api/upload.php`

Upload de vid√©os.

**Body:** multipart/form-data
- `video` : Fichier vid√©o (max 500MB)

**Response:**
```json
{
    "success": true,
    "file": "video.mp4",
    "size": 12345678,
    "message": "Upload r√©ussi!"
}
```

### 5. YouTube Download

**POST** `/api/youtube.php`

T√©l√©charge une vid√©o YouTube.

**Body:**
- `url` : URL YouTube
- `quality` : 720p (optionnel)

**Response:**
```json
{
    "success": true,
    "file": "youtube_abc123.mp4",
    "message": "T√©l√©chargement r√©ussi!"
}
```

## Exemples d'utilisation

### Bash/cURL
```bash
# Status syst√®me
curl http://192.168.1.103/api/system.php

# Contr√¥le VLC
curl "http://192.168.1.103/api/control.php?action=restart"

# Liste vid√©os
curl "http://192.168.1.103/api/playlist.php?action=videos"
```

### JavaScript
```javascript
// Status syst√®me
fetch('http://192.168.1.103/api/system.php')
    .then(res => res.json())
    .then(data => console.log(data));

// Upload vid√©o
const formData = new FormData();
formData.append('video', fileInput.files[0]);
fetch('/api/upload.php', {
    method: 'POST',
    body: formData
});
```

### Python
```python
import requests

# Status syst√®me
r = requests.get('http://192.168.1.103/api/system.php')
print(r.json())

# YouTube download
r = requests.post('http://192.168.1.103/api/youtube.php', 
                  data={'url': 'https://youtube.com/watch?v=...'})
print(r.json())
```
EOF

# 5. CONTRIBUTING.md
cat > CONTRIBUTING.md << 'EOF'
# ü§ù Contribution √† Pi-Signage

Merci de votre int√©r√™t pour contribuer √† Pi-Signage !

## Comment Contribuer

1. Fork le projet
2. Cr√©ez votre branche (`git checkout -b feature/AmazingFeature`)
3. Committez vos changements (`git commit -m 'Add AmazingFeature'`)
4. Push vers la branche (`git push origin feature/AmazingFeature`)
5. Ouvrez une Pull Request

## Guidelines

- Testez sur un vrai Raspberry Pi 4
- Documentez vos changements
- Suivez le style de code existant
- Mettez √† jour la documentation si n√©cessaire

## Tests

Avant de soumettre :
```bash
# Tester l'installation
sudo ./install.sh

# V√©rifier les performances
/opt/pisignage/scripts/vlc-control.sh benchmark

# Tester l'interface web
curl http://localhost/api/system.php
```

## Rapport de Bugs

Utilisez les issues GitHub avec :
- Description claire du probl√®me
- √âtapes pour reproduire
- Version de Pi-Signage
- Mod√®le de Raspberry Pi
- Logs pertinents
EOF

# 6. LICENSE
cat > LICENSE << 'EOF'
MIT License

Copyright (c) 2025 Pi-Signage Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF

echo "‚úÖ Documentation compl√®te cr√©√©e dans docs/"
ls -la /opt/pisignage/github-v0.9.0/docs/
